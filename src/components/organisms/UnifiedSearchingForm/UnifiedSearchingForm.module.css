.unifiedSearchingForm {
  width: 100%;
  max-width: unset;
  filter: drop-shadow(-1px 1px 7px rgba(0, 0, 0, 0.1));
  z-index: 1000;
  padding: var(--space-4);
  margin-top: calc(var(--space-2) * -14);
}

/* Compact variant */
.compact {
  margin-top: 0;
  border-radius: var(--radius-md-2);
  padding: var(--space-4);
  width: 100%;
  overflow: hidden;
  border: 1px solid var(--color-gray-100);
  max-width: unset;
}

.compact .tabsList {
  width: 100%;
  max-width: 337px;
}

.compact .tabsContent {
  padding: var(--space-3);
}

.compact .formGrid {
  gap: var(--space-2);
}

/* Embedded variant */
.embedded {
  margin-top: 0;
  padding: 0;
  filter: none;
  box-shadow: none;
  background: transparent;
  max-width: unset;
}

.embedded .formGrid {
  gap: var(--space-2);
  padding: var(--space-3);
  background-color: var(--color-white);
  border-radius: var(--radius-md);
}

/* Tabs */
.tabsRoot {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.tabsList {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 0;
  width: 337px;
  height: 48px;
  border-radius: var(--radius-lg) var(--radius-lg) 0 0;
  background: var(--color-white);
  overflow: hidden;
}

.tabsTrigger {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 48px;
  font-family: var(--font-family-primary);
  font-weight: 400;
  font-size: var(--font-size-sm);
  line-height: 18px;
  color: var(--color-text-secondary);
  background: var(--color-bg-secondary);
  border: 1px solid #cccccc;
  cursor: pointer;
  flex: 1;
}

.tabsTrigger:first-child {
  border-radius: var(--radius-lg) 0 0 0;
  border-left: none;
}

.tabsTrigger:last-child {
  border-radius: 0 var(--radius-lg) 0 0;
}

.tabsTrigger:hover {
  color: var(--color-primary);
}

.tabsTrigger[data-state="active"] {
  background: var(--color-white);
  color: var(--color-black);
  font-weight: 500;
  border: none;
}

.tabsContent {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: var(--space-4);
  gap: var(--space-4);
  background: var(--color-white);
  border-radius: 0 var(--radius-md) var(--radius-md);
  width: 100%;
}

/* Hide inactive tab content */
.tabsContent[data-state="inactive"] {
  display: none;
}

/* Form Grid - Using CSS Grid for better control */
.formGrid {
  display: grid;
  width: 100%;
  color: var(--color-text-primary);
}

/* Main form content - Grid layout for different screen sizes */
.formContent {
  display: grid;
  gap: var(--space-2);
  width: 100%;
  align-items: center;
}

/* Large screens: Single row layout (6 fields) */
@media (min-width: 1200px) {
  .formContent {
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr auto;
    grid-template-areas: "activity location date time passengers buttons";
  }

  .formField:nth-child(1) {
    grid-area: activity;
  }
  .formField:nth-child(2) {
    grid-area: location;
  }
  .formField:nth-child(3) {
    grid-area: date;
  }
  .formField:nth-child(4) {
    grid-area: time;
  }
  .formField:nth-child(5) {
    grid-area: passengers;
  }
  .buttonContainer {
    grid-area: buttons;
  }
}

/* Medium screens: 2x3 layout */
@media (min-width: 851px) and (max-width: 1199px) {
  .formContent {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-areas:
      "activity location date"
      "time passengers passengers"
      "buttons buttons buttons";
    align-items: end;
  }

  .formField:nth-child(1) {
    grid-area: activity;
  }
  .formField:nth-child(2) {
    grid-area: location;
  }
  .formField:nth-child(3) {
    grid-area: date;
  }
  .formField:nth-child(4) {
    grid-area: time;
  }
  .formField:nth-child(5) {
    grid-area: passengers;
  }
  .buttonContainer {
    grid-area: buttons;
  }
}

/* Small tablets: 2 columns */
@media (min-width: 769px) and (max-width: 850px) {
  .formContent {
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
      "activity location"
      "date time"
      "passengers passengers"
      "buttons buttons";
    align-items: end;
  }

  .formField:nth-child(1) {
    grid-area: activity;
  }
  .formField:nth-child(2) {
    grid-area: location;
  }
  .formField:nth-child(3) {
    grid-area: date;
  }
  .formField:nth-child(4) {
    grid-area: time;
  }
  .formField:nth-child(5) {
    grid-area: passengers;
  }
  .buttonContainer {
    grid-area: buttons;
  }
}

/* Mobile: Single column stacked layout */
@media (max-width: 768px) {
  .unifiedSearchingForm {
    max-width: unset;
    width: 100%;
    padding: var(--space-2);
    margin-top: 0;
  }

  .compact {
    padding: var(--space-2);
  }

  .embedded {
    padding: 0;
  }

  .embedded .formGrid {
    padding: var(--space-2);
  }

  .tabsList {
    width: 100%;
    height: auto;
    flex-wrap: wrap;
  }

  .tabsTrigger {
    flex: 1;
    min-width: 0;
    font-size: var(--font-size-xs);
    padding: var(--space-2);
    height: 40px;
  }

  .tabsContent {
    padding: var(--space-2);
    border-radius: 0 0 var(--radius-md) var(--radius-md);
  }

  .formGrid {
    gap: var(--space-2);
  }

  .formContent {
    grid-template-columns: 1fr;
    grid-template-areas:
      "activity"
      "location"
      "date"
      "time"
      "passengers"
      "buttons";
    gap: var(--space-2);
  }

  .formField:nth-child(1) {
    grid-area: activity;
  }
  .formField:nth-child(2) {
    grid-area: location;
  }
  .formField:nth-child(3) {
    grid-area: date;
  }
  .formField:nth-child(4) {
    grid-area: time;
  }
  .formField:nth-child(5) {
    grid-area: passengers;
  }
  .buttonContainer {
    grid-area: buttons;
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }
}

/* Simplified component containers */
.formField {
  position: relative;
  width: 100%;
}

.buttonContainer {
  display: flex;
  gap: var(--space-2);
  align-items: center;
  white-space: nowrap;
}

/* Buttons */
.searchButton {
  white-space: nowrap;
  min-width: fit-content;
  width: 100%;
}

.saveButton {
  white-space: nowrap;
  min-width: fit-content;
}

/* Error Messages */
.errorMessage {
  position: relative;
  width: 100%;
  font-family: var(--font-family-primary);
  color: var(--color-alert-error);
  font-size: var(--font-size-xs);
  text-align: left;
  z-index: 10;
}

/* Small Mobile Responsive Design */
@media (max-width: 480px) {
  .unifiedSearchingForm {
    padding: var(--space-1);
  }

  .tabsContent {
    padding: var(--space-1);
  }

  .embedded .formGrid {
    padding: var(--space-1);
  }

  .tabsTrigger {
    font-size: var(--font-size-xs);
    padding: var(--space-1) var(--space-2);
    height: 36px;
  }

  .formGrid {
    gap: var(--space-2);
  }

  .formContent {
    gap: var(--space-2);
  }
}

/* Edit Mode Banner Styles */
.editModeBanner {
  grid-column: 1 / -1;
  border: 1px solid var(--color-secondary);
  border-radius: var(--radius-md);
  padding: var(--space-3);
  margin-bottom: var(--space-3);
}

.editModeContent {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  width: 100%;
}

.editModeIcon {
  font-size: 2rem;
  animation: editModeIconBounce 1.5s ease-in-out infinite;
}

.editModeText {
  flex: 1;
  min-width: 0;
}

.editModeTitle {
  margin: 0 0 var(--space-1) 0;
  font-size: var(--font-size-lg);
  font-weight: 700;
  color: var(--color-secondary);
  line-height: 1.2;
}

.editModeSubtitle {
  margin: 0;
  font-size: var(--font-size-sm);
  color: var(--color-secondary);
  line-height: 1.3;
}

.editModeSubtitle strong {
  color: var(--color-secondary);
  font-weight: 600;
}

.cancelEditButton {
  flex-shrink: 0;
  background: var(--color-white);
  border: 1px solid var(--color-secondary);
  color: var(--color-secondary);
  font-weight: 600;
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
}

.cancelEditButton:hover {
  background: var(--color-secondary);
  color: var(--color-white);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(255, 138, 52, 0.3);
}

/* Animations */
@keyframes editModeIconBounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-5px);
  }
  60% {
    transform: translateY(-3px);
  }
}

/* Mobile responsiveness for edit banner */
@media (max-width: 768px) {
  .editModeBanner {
    margin-bottom: var(--space-2);
    padding: var(--space-2);
  }

  .editModeContent {
    flex-direction: column;
    gap: var(--space-2);
    text-align: center;
  }

  .editModeIcon {
    font-size: 1.5rem;
  }

  .editModeTitle {
    font-size: var(--font-size-md);
  }

  .editModeSubtitle {
    font-size: var(--font-size-xs);
  }

  .cancelEditButton {
    width: 100%;
    justify-self: stretch;
  }
}

/* Error and loading states */
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  padding: var(--space-4);
  background: var(--color-red-50);
  border: 1px solid var(--color-red-200);
  border-radius: var(--radius-md);
}

.errorMessage {
  color: var(--color-red-700);
  text-align: center;
  font-weight: 500;
}

.retryButton {
  min-width: 120px;
}

/* Time slot filtering feedback styles */
.filterFeedback {
  grid-column: 1 / -1;
  margin-bottom: var(--space-2);
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-sm);
  background: var(--color-blue-50);
  border: 1px solid var(--color-blue-200);
}

.loadingFeedback {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  color: var(--color-blue-700);
  font-size: 0.875rem;
  font-weight: 500;
}

.infoFeedback {
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
  color: var(--color-blue-700);
  font-size: 0.875rem;
}

.infoHint {
  font-size: 0.75rem;
  color: var(--color-blue-600);
  font-style: italic;
}

.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid var(--color-blue-200);
  border-top: 2px solid var(--color-blue-600);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.timeSlotField {
  min-width: 260px;
}
